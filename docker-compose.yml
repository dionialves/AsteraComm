version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: asterisk
      POSTGRES_USER: asterisk
      POSTGRES_PASSWORD: asterisk
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      asteracomm-network:
        ipv4_address: 172.18.0.2

  asterisk:
    build: ./asterisk
    container_name: asterisk
    ports:
      - "5060:5060/udp"
      - "5061:5061/tcp"
      - "5060:5060/udp"
      - "5061:5061/tcp"
      - "5038:5038/tcp"
      - "10000-10010:10000-10010/udp"
    volumes:
      - ./asterisk/config:/etc/asterisk
      - ./asterisk/odbc.ini:/etc/odbc.ini
      - ./asterisk/odbcinst.ini:/etc/odbcinst.ini
    depends_on:
      - postgres
    networks:
      asteracomm-network:
        ipv4_address: 172.18.0.3


  asteracomm:
    build: ./asteracomm
    container_name: asteracomm-backend
    ports:
      - "8090:8090"
    volumes:
      - ./asteracomm/app:/app
    networks:
      asteracomm-network:
        ipv4_address: 172.18.0.4
    depends_on:
      - postgres

  nginx:
    image: nginx:stable
    container_name: asteracomm-frontend
    volumes:
      - ./nginx/www:/usr/share/nginx/html:ro
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks:
      asteracomm-network:
        ipv4_address: 172.18.0.5
    depends_on:
      - asteracomm

volumes:
  postgres-data:

networks:
  asteracomm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
